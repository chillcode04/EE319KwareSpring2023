


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program initially written by: Yerraballi and Valvano
    3 00000000         ; Author: Place your name here
    4 00000000         ; Date Created: 1/15/2018 
    5 00000000         ; Last Modified: 12/30/2022 
    6 00000000         ; Brief description of the program: Solution to Lab1
    7 00000000         ; The objective of this system is to implement a parity 
                       system
    8 00000000         ; Hardware connections: 
    9 00000000         ;  One output is positive logic, 1 turns on the LED, 0 t
                       urns off the LED
   10 00000000         ;  Three inputs are positive logic, meaning switch not p
                       ressed is 0, pressed is 1
   11 00000000 400073FC 
                       GPIO_PORTD_DATA_R
                               EQU              0x400073FC
   12 00000000 40007400 
                       GPIO_PORTD_DIR_R
                               EQU              0x40007400
   13 00000000 4000751C 
                       GPIO_PORTD_DEN_R
                               EQU              0x4000751C
   14 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   15 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   16 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   17 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   18 00000000                 PRESERVE8
   19 00000000                 AREA             Data, ALIGN=2
   20 00000000         ; Declare global variables here if needed
   21 00000000         ; with the SPACE assembly directive
   22 00000000                 ALIGN            4
   23 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   24 00000000                 THUMB
   25 00000000                 EXPORT           EID
   26 00000000 48 55 59 
              32 31 30 
              00       EID     DCB              "HUY210",0  ;replace ABC123 wit
                                                            h your EID
   27 00000007                 EXPORT           RunGrader
   28 00000007 00              ALIGN            4
   29 00000008 00000001 
                       RunGrader
                               DCD              1           ; change to nonzero
                                                             when ready for gra
                                                            ding
   30 0000000C         
   31 0000000C                 EXPORT           Lab1
   32 0000000C         ; Port E: Key2, Key1, Key0 input switches on PE2,PE1,PE0
                         output LED on PE4
   33 0000000C         Lab1



ARM Macro Assembler    Page 2 


   34 0000000C 4816            LDR              R0,=SYSCTL_RCGCGPIO_R
   35 0000000E 6801            LDR              R1,[R0]     ;previous
   36 00000010 F041 0110       ORR              R1,R1,#0x10 ;bit 4 is clock for
                                                             E
   37 00000014 6001            STR              R1,[R0]     ;turn on clock for 
                                                            E
   38 00000016 BF00            NOP                          ;wait
   39 00000018 BF00            NOP                          ;wait
   40 0000001A         
   41 0000001A 4814            LDR              R0,=GPIO_PORTE_DIR_R
   42 0000001C F04F 0110       MOV              R1,#0x10    ;PE4 output, PE0,PE
                                                            1,PE2 input
   43 00000020 6001            STR              R1,[R0]
   44 00000022 4813            LDR              R0,=GPIO_PORTE_DEN_R
   45 00000024 F04F 0117       MOV              R1,#0x17    ;enable PE1,PE0,PE2
                                                            ,PE4
   46 00000028 6001            STR              R1,[R0]
   47 0000002A 4812            LDR              R0,=GPIO_PORTE_DATA_R
   48 0000002C         loop
   49 0000002C 6801            LDR              R1,[R0]
   50 0000002E F001 0507       AND              R5, R1, #7  ; select PE0,PE1,PE
                                                            2
   51 00000032 F04F 0200       MOV              R2, #0
   52 00000036 F04F 0304       MOV              R3, #4
   53 0000003A         R3_LSR
   54 0000003A EA05 0403       AND              R4, R5, R3
   55 0000003E 4224            TST              R4, R4
   56 00000040 BF18 1C52       ADDNE            R2, R2, #1
   57 00000044 EA4F 0353       LSR              R3, R3, #1
   58 00000048 2B00            CMP              R3, #0
   59 0000004A D000            BEQ              State_odd   ; R3 == 0
   60 0000004C E7F5            B                R3_LSR
   61 0000004E         
   62 0000004E         State_odd
   63 0000004E F002 0201       AND              R2, R2, #1
   64 00000052 2A00            CMP              R2, #0
   65 00000054 D003            BEQ              turn_on
   66 00000056         
   67 00000056         ;turn_off
   68 00000056 F021 0110       BIC              R1, R1, #0x10 ; Set PE4 low
   69 0000005A 6001            STR              R1, [R0]    ; Store back to dat
                                                            a register
   70 0000005C E7E6            B                loop
   71 0000005E         
   72 0000005E         turn_on
   73 0000005E F041 0110       ORR              R1, R1, #0x10 ; Set PE4 high
   74 00000062 6001            STR              R1, [R0]    ; Store back to dat
                                                            a register
   75 00000064 E7E2            B                loop        ; Repeat the loop
   76 00000066         
   77 00000066         
   78 00000066 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
   79 00000068                 END                          ; end of file
              400FE608 
              40024400 
              4002451C 
              400243FC 



ARM Macro Assembler    Page 3 


Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\lab1.d -o.\lab1.o -I.\RTE\_Lab1 -IC:\Users\Admin\AppData\Local\A
rm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Users\Admin\AppData\Local\Arm\
Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__UVISION_VERSION
 SETA 531" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --prede
fine="_RTE_ SETA 1" --list=.\lab1.lst Lab1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Data 00000000

Symbol: Data
   Definitions
      At line 19 in file Lab1.s
   Uses
      None
Comment: Data unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 23 in file Lab1.s
   Uses
      None
Comment: .text unused
EID 00000000

Symbol: EID
   Definitions
      At line 26 in file Lab1.s
   Uses
      At line 25 in file Lab1.s
Comment: EID used once
Lab1 0000000C

Symbol: Lab1
   Definitions
      At line 33 in file Lab1.s
   Uses
      At line 31 in file Lab1.s
Comment: Lab1 used once
R3_LSR 0000003A

Symbol: R3_LSR
   Definitions
      At line 53 in file Lab1.s
   Uses
      At line 60 in file Lab1.s
Comment: R3_LSR used once
RunGrader 00000008

Symbol: RunGrader
   Definitions
      At line 29 in file Lab1.s
   Uses
      At line 27 in file Lab1.s
Comment: RunGrader used once
State_odd 0000004E

Symbol: State_odd
   Definitions
      At line 62 in file Lab1.s
   Uses
      At line 59 in file Lab1.s
Comment: State_odd used once
loop 0000002C

Symbol: loop
   Definitions
      At line 48 in file Lab1.s
   Uses
      At line 70 in file Lab1.s
      At line 75 in file Lab1.s

turn_on 0000005E




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: turn_on
   Definitions
      At line 72 in file Lab1.s
   Uses
      At line 65 in file Lab1.s
Comment: turn_on used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTD_DATA_R 400073FC

Symbol: GPIO_PORTD_DATA_R
   Definitions
      At line 11 in file Lab1.s
   Uses
      None
Comment: GPIO_PORTD_DATA_R unused
GPIO_PORTD_DEN_R 4000751C

Symbol: GPIO_PORTD_DEN_R
   Definitions
      At line 13 in file Lab1.s
   Uses
      None
Comment: GPIO_PORTD_DEN_R unused
GPIO_PORTD_DIR_R 40007400

Symbol: GPIO_PORTD_DIR_R
   Definitions
      At line 12 in file Lab1.s
   Uses
      None
Comment: GPIO_PORTD_DIR_R unused
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 14 in file Lab1.s
   Uses
      At line 47 in file Lab1.s
Comment: GPIO_PORTE_DATA_R used once
GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 16 in file Lab1.s
   Uses
      At line 44 in file Lab1.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 15 in file Lab1.s
   Uses
      At line 41 in file Lab1.s
Comment: GPIO_PORTE_DIR_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 17 in file Lab1.s
   Uses
      At line 34 in file Lab1.s
Comment: SYSCTL_RCGCGPIO_R used once
7 symbols
351 symbols in table
